.canvas-container {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.controls {
  margin-bottom: 8px;
}

.icon-btn {
  border: none;
  background: none;
  padding: 6px;
  cursor: pointer;
  margin-right: 8px;
}

.icon-btn-img {
  width: 24px;
  height: 24px;
  opacity: 0.6;
}

.icon-btn.active .icon-btn-img {
  opacity: 1;
}

/* área do canvas com grid pontilhado */
.canvas {
  position: relative;
  flex: 1;
  padding: 1rem;
  box-sizing: border-box;
  overflow: hidden;
  cursor: crosshair;
  background-color: #f5f5f5;
  background-image: radial-gradient(#ccc 1px, transparent 1px);
  background-size: 20px 20px;
}

.canvas.service-delete-mode {
  /* opcional: muda cursor para mostrar modo excluir */
  cursor: pointer;
}

.connections {
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;

  z-index: 2;
}

.hit-area {
  stroke: transparent;
  stroke-width: 12px;
  pointer-events: stroke;
  cursor: pointer;
}

.visible-line {
  stroke: black;
  stroke-width: 2px;
  pointer-events: none;
}

.visible-line.dashed {
  stroke-dasharray: 4 4;
}

.visible-line.solid {
  stroke-dasharray: none;
}

.node {
  position: absolute;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 8px 12px;
  background: #ffffff;
  border-radius: 6px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
  cursor: grab;
  user-select: none;
  box-sizing: border-box;
}

.node:active {
  cursor: grabbing;
}

.node-icon {
  width: 40px;
  height: 40px;
  margin-bottom: 4px;
}

.node-label {
  font-size: 13px;
  text-align: center;
}
/* ===== Portas dos nós ===== */
.port {
  position: absolute;
  width: 12px;
  height: 12px;
  border-radius: 999px;
  border: 2px solid #1c2533;
  background: #fff;
  cursor: crosshair;
  box-shadow: 0 1px 3px rgba(0,0,0,.12);
  transition: transform .08s ease;
}
.port:hover { transform: scale(1.15); }

.port.top    { top: -6px; left: 50%; transform: translate(-50%, -50%); }
.port.right  { right: -6px; top: 50%; transform: translate(50%, -50%); }
.port.bottom { bottom: -6px; left: 50%; transform: translate(-50%, 50%); }
.port.left   { left: -6px; top: 50%; transform: translate(-50%, -50%); }

/* Ports menores, circulares e azuis */
.node .port {
  --port-size: 6px;                 /* ajuste aqui o tamanho */
  --port-offset: calc(var(--port-size) / 2);

  position: absolute;
  width: var(--port-size);
  height: var(--port-size);
  border-radius: 50%;
  background: #ffffff;
  border: 1.5px solid #2b6fff;         /* azul */
  outline: none;
  padding: 0;
  cursor: crosshair;
  -webkit-appearance: none;
  appearance: none;

  /* anel externo sutil (tipo o que já tinha no visual) */
  box-shadow: 0 0 0 1.5px #0f1a2a;
}

.node .port:hover {
  box-shadow: 0 0 0 3px rgba(43,111,255,.25), 0 0 0 2px #0f1a2a;
}

.node .port:active { background: #2b6fff20; }

/* posicionamento nas 4 bordas */
.node .port.top {
  top: calc(-1 * var(--port-offset));
  left: 50%;
  transform: translateX(-50%);
}

.node .port.right {
  right: calc(-1 * var(--port-offset));
  top: 50%;
  transform: translateY(-50%);
}

.node .port.bottom {
  bottom: calc(-1 * var(--port-offset));
  left: 50%;
  transform: translateX(-50%);
}

.node .port.left {
  left: calc(-1 * var(--port-offset));
  top: 50%;
  transform: translateY(-50%);
}
/* Ports escondidas por padrão */
.node .port {
  opacity: 0;
  pointer-events: none;           /* não clicáveis enquanto escondidas */
  transition: opacity .12s ease, transform .12s ease;
}

/* Mostra as ports quando o mouse entra no card */
.node:hover .port {
  opacity: 1;
  pointer-events: auto;
}

/* Mostra todas as ports enquanto está conectando */
.canvas.show-ports .port {
  opacity: 1;
  pointer-events: auto;
}

.node { will-change: left, top; }

.node-label {
  font-family: "Poppins", system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
  font-weight: 700;
  font-size: 14px;
  line-height: 1.2;
  text-align: center;
  margin-top: 6px;
  color: #0f172a; /* ajuste se preferir outra cor */
}
/* === Node compacto === */
.node {
  width: 108px;      /* antes 132px */
  height: 96px;      /* antes 116px */
  padding: 10px 8px; 
  gap: 6px;
}

.node-icon {
  width: 44px;       /* antes 56px */
  height: 44px;
  object-fit: contain;
}

.node-label {
  font-size: 13px;   /* antes 14px */
  line-height: 1.05;
  text-align: center;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}


/* ===== VPC como janela/contêiner ===== */
.vpc-container {
  position: absolute;
  left: 0; top: 0;
  background: #f9fbff;
  border: 2px dashed #94a3b8;
  border-radius: 12px;
  box-shadow: inset 0 0 0 1px rgba(148,163,184,.35), 0 6px 18px rgba(2,6,23,.06);
  pointer-events: auto;
  user-select: none;
}

.vpc-header {
  display: flex;
  align-items: center;
  gap: 8px;
  height: 40px;
  padding: 6px 10px;
  background: #eaf2ff;
  border-bottom: 1px solid rgba(148,163,184,.45);
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
  font-weight: 700;
  color: #0f172a;

  position: relative;
  z-index: 5;
}

.vpc-icon { width: 20px; height: 20px; object-fit: contain; }
.vpc-title { font-size: 13px; }

.vpc-body {
  position: absolute;
  inset: 40px 0 0 0;
}



/* Font Awesome toolbar icons */
.icon-fa {
  font-size: 22px;
  line-height: 1;
  width: 24px;
  height: 24px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  opacity: .85;
}
.icon-btn:hover .icon-fa, .icon-btn.active .icon-fa { opacity: 1; }


/* Não bloquear interações do canvas/nodes ao sobrepor a VPC */
.vpc-body { pointer-events: none; }

/* Header arrastável */
.vpc-header { cursor: move; user-select: none; 
  position: relative;
  z-index: 5;
}

/* Handle de redimensionamento (canto inferior direito) */
.vpc-resize {
  position: absolute;
  right: 6px;
  bottom: 6px;
  width: 14px;
  height: 14px;
  border-right: 2px solid rgba(15, 23, 42, .45);
  border-bottom: 2px solid rgba(15, 23, 42, .45);
  cursor: se-resize;
  pointer-events: auto;

  z-index: 5;
}


/* ===== Toolbar icon active + feedback ===== */
.icon-btn .icon-fa {
  transition: transform .08s ease, color .15s ease, opacity .12s ease;
}

/* Azul quando o botão está ativo/selecionado */
.icon-btn.active .icon-fa {
  color: #2563eb; /* blue-600 */
  opacity: 1;
}

/* Hover dá um leve realce */
.icon-btn:hover .icon-fa {
  transform: translateY(-1px);
}

/* Feedback de clique: desce e volta suavemente */
.icon-btn:active .icon-fa {
  transform: translateY(1px) scale(0.98);
}


/* ===== Camadas =====
   - vpc-body atrás
   - connections (linhas) no meio
   - nodes na frente
   - vpc-header e vpc-resize acima de tudo p/ arrastar/redimensionar
*/

/* Remova QUALQUER z-index da vpc-container para NÃO criar stacking context */
.canvas .vpc-container {
  position: absolute; /* ou relative, conforme já estiver */
  /* z-index: 1;  <-- REMOVER se existir */
}

/* O “papel” da VPC fica atrás e não intercepta clique (linhas passam por cima) */
.vpc-body {
  position: relative;
  z-index: 1;
  pointer-events: none; /* não bloqueia cliques nas linhas ou nos serviços */
}

/* SVG das conexões por cima do papel da VPC */
.connections {
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  z-index: 10;         /* acima do vpc-body */
  /* NÃO usar pointer-events:none aqui, para permitir selecionar/editar linhas */
}

/* Serviços sempre acima das linhas */
.canvas .node {
  position: absolute;  /* garantir posicionamento */
  z-index: 20;
}
.canvas .node.dragging {
  z-index: 40;         /* durante drag, fica no topo */
}

/* Header e handle de resize da VPC acima das linhas (e com clique ativo) */
.vpc-header {
  position: relative;
  z-index: 30;         /* acima das connections */
  pointer-events: auto;
}

.vpc-resize {
  position: absolute;  /* normalmente já é absolute */
  z-index: 30;         /* acima das connections */
  pointer-events: auto;
}
